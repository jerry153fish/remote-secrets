name: Rust Cache
on:
  schedule:
    - cron: "30 14 * * 0"
jobs:
  cache:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: ⚡ Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cache-

      - name: ⚡ Cache Rust Target
        uses: actions/cache@v4
        with:
          path: |
            target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-target-

      - name: clean cargo cache
        run: |
          rm -rf target || true
          cargo install cargo-cache
          cargo cache --autoclean

      - name: Build Cache
        run: |
          cargo build
